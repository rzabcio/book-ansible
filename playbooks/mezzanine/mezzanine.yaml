---
- name: Deploy mezzanine
  hosts: ansible1
  # hosts: gcp

###########################################################
# VARIABLES
###########################################################:w
  vars:
    user: "{{ ansible_user }}"
    proj_app: mezzanine_example
    proj_name: "{{ proj_app }}"
    venv_home: "{{ ansible_env.HOME }}/.virtualenvs"
    venv_path: "{{ venv_home }}/{{ proj_name }}"
    proj_path: "{{ ansible_env.HOME }}/mezzanine/{{ proj_name }}"
    settings_path: "{{ proj_path }}/{{ proj_name }}"
    req_path: requirements.txt
    manage : "{{ python }} {{ proj_path }}/manage.py"
    live_hostname: "{{ ansible_host }}.nip.io"
    domains:
      - "{{ live_hostname }}"
      - "www.{{ live_hostname }}"
    repo_url: git@github.com:rzabcio/mezzanine_example.git
    locale: en_US.UTF-8
    conf_path: /etc/nginx/default.d
    tls_enabled: True
    python: "{{ venv_path }}/bin/python"
    database_name: "{{ proj_name }}"
    database_user: "{{ proj_name }}"
    database_host: localhost
    database_port: 5432
    gunicorn_procname: gunicorn_mezzanine
    num_workers: "multiprocessing.cpu_count() * 2 + 1"
  vars_files:
    - secrets.yaml

###########################################################
# TASKS
###########################################################:w
  tasks:
    - name: Some debugging
      debug: var=live_hostname
    - name: Installing system packages
      yum: 
        state: present
        update_cache: no
        name:
          - git
          - libjpeg  # was: libjpeg-dev
          - postgresql-libs  # was: libpq-dev
          - memcached
          - nginx
          - postgresql
          - postgresql-devel  # new
          - gcc  # new
          - python3-devel  # was: python-dev
          - python3-pip
          - python3-psycopg2
          - python3-setuptools
          - python3-virtualenv
          - supervisor
      become: True
    - name: create project dir
      file: path={{ proj_path }} state=directory
    - name: create logs dir
      file: path="{{ ansible_env.HOME }}/logs" state=directory
    - name: checkout repo on the host
      git: repo={{ repo_url }} dest={{ proj_path }}
    - name: python system packages install with pip
      pip:
        executable: /usr/bin/pip3
        state: latest
        name:
          - pip
          - pbr
          - virtualenv
          - virtualenvwrapper
      become: True
    - name: Manually create the initial virtualenv
      command:
        cmd: virtualenv {{ venv_path }} -p python3
        creates: "{{ venv_path }}"
    - name: python packages from requirements
      pip:
        # executable: /usr/bin/pip3
        requirements: "{{ proj_path }}/{{ req_path }}"
        virtualenv: "{{ venv_path }}"
    - name: python user packages install with pip
      pip:
        virtualenv: "{{ venv_path }}"
        name:
          - gunicorn
          - setproctitle
          - psycopg2-binary
          - django-compressor
          - python-memcached
